@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var isCustomer = User.IsInRole("Customer");
}
<div class="mb-3">
    <h4 class="text-light">Settings</h4>
</div>
<ul class="nav flex-column profile-nav">
    <li class="nav-item mb-1"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item mb-1"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item mb-1"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>

    @if (isCustomer)
    {
        <li class="nav-item mb-1">
            <a class="nav-link @ManageNavPages.PaymentsNavClass(ViewContext)" id="payments" asp-page="./Payments">Payments</a>
        </li>
    }

    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item">
            <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a>
        </li>
    }
</ul>
